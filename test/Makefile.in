# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
TESTS = test_RandomSrc$(EXEEXT) test_Configuration.sh \
	test_FilePath$(EXEEXT) test_FileLock$(EXEEXT) \
	test_CalGregorian$(EXEEXT) test_Earth$(EXEEXT) \
	test_SerialGrp$(EXEEXT) test_FileLock_Serial$(EXEEXT) \
	$(am__append_1) test_GridLatLonFieldSfc$(EXEEXT) \
	test_GridLatLonField3D$(EXEEXT) \
	test_GridLatLonFieldSfc_serial$(EXEEXT) \
	test_GridLatLonField3D_serial$(EXEEXT) $(am__append_3) \
	test_LinearVinterp$(EXEEXT) test_LogLinearVinterp$(EXEEXT) \
	test_BilinearHinterp$(EXEEXT) \
	test_BilinearHinterp_serial$(EXEEXT) $(am__append_5) \
	test_ThetaOTF$(EXEEXT) test_TropOTF$(EXEEXT) \
	test_PressOTF$(EXEEXT) test_PAltOTF$(EXEEXT) \
	test_PAltDotOTF$(EXEEXT) test_DensOTF$(EXEEXT) \
	test_ThetaDotOTF$(EXEEXT) test_BalanceThetaDot1OTF$(EXEEXT) \
	test_MetSBRot$(EXEEXT) test_MetSBRot_serial$(EXEEXT) \
	$(am__append_7) test_MetGridSBRot$(EXEEXT) \
	test_MetGridSBRot_serial$(EXEEXT) $(am__append_9) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8) \
	test_MetSelector$(EXEEXT) test_Parcel$(EXEEXT) \
	test_StreamDump_Load$(EXEEXT) test_StreamRead$(EXEEXT) \
	test_StreamPrint$(EXEEXT) test_FlockSerial$(EXEEXT) \
	test_SwarmSerial$(EXEEXT) test_ChangeVertical$(EXEEXT) \
	$(am__EXEEXT_9) $(am__append_20) test_PGenRep$(EXEEXT) \
	test_PGenGrid$(EXEEXT) test_PGenRnd$(EXEEXT) \
	test_PGenRndDisc$(EXEEXT) test_PGenDisc$(EXEEXT) \
	test_PGenFile$(EXEEXT) $(am__EXEEXT_11) test_traj000$(EXEEXT) \
	test_traj001$(EXEEXT) test_traj010$(EXEEXT) \
	test_gtmodel_s01.sh
check_PROGRAMS = test_RandomSrc$(EXEEXT) test_Configuration$(EXEEXT) \
	test_FilePath$(EXEEXT) test_FileLock$(EXEEXT) \
	test_CalGregorian$(EXEEXT) test_Earth$(EXEEXT) \
	test_SerialGrp$(EXEEXT) test_FileLock_Serial$(EXEEXT) \
	$(am__EXEEXT_1) test_GridLatLonField3D$(EXEEXT) \
	test_GridLatLonFieldSfc$(EXEEXT) \
	test_GridLatLonFieldSfc_serial$(EXEEXT) \
	test_GridLatLonField3D_serial$(EXEEXT) $(am__EXEEXT_2) \
	test_LinearVinterp$(EXEEXT) test_LogLinearVinterp$(EXEEXT) \
	test_BilinearHinterp$(EXEEXT) \
	test_BilinearHinterp_serial$(EXEEXT) $(am__EXEEXT_3) \
	test_ThetaOTF$(EXEEXT) test_TropOTF$(EXEEXT) \
	test_PressOTF$(EXEEXT) test_PAltOTF$(EXEEXT) \
	test_PAltDotOTF$(EXEEXT) test_DensOTF$(EXEEXT) \
	test_ThetaDotOTF$(EXEEXT) test_BalanceThetaDot1OTF$(EXEEXT) \
	test_MetSBRot$(EXEEXT) test_MetSBRot_serial$(EXEEXT) \
	$(am__EXEEXT_4) test_MetGridSBRot$(EXEEXT) \
	test_MetGridSBRot_serial$(EXEEXT) $(am__EXEEXT_5) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8) \
	test_MetSelector$(EXEEXT) test_Parcel$(EXEEXT) \
	test_StreamDump_Load$(EXEEXT) test_StreamRead$(EXEEXT) \
	test_StreamPrint$(EXEEXT) test_FlockSerial$(EXEEXT) \
	test_SwarmSerial$(EXEEXT) test_ChangeVertical$(EXEEXT) \
	$(am__EXEEXT_9) $(am__EXEEXT_10) test_PGenRep$(EXEEXT) \
	test_PGenGrid$(EXEEXT) test_PGenRnd$(EXEEXT) \
	test_PGenRndDisc$(EXEEXT) test_PGenDisc$(EXEEXT) \
	test_PGenFile$(EXEEXT) $(am__EXEEXT_11) test_traj000$(EXEEXT) \
	test_traj001$(EXEEXT) test_traj010$(EXEEXT)
@MPI_TRUE@am__append_1 = test_MPIGrp.sh  test_FileLock_MPI.sh
@MPI_TRUE@am__append_2 = test_MPIGrp test_FileLock_MPI
@MPI_TRUE@am__append_3 = test_GridLatLonFieldSfc_MPI.sh \
@MPI_TRUE@	test_GridLatLonField3D_MPI.sh
@MPI_TRUE@am__append_4 = test_GridLatLonFieldSfc_MPI \
@MPI_TRUE@	test_GridLatLonField3D_MPI
@MPI_TRUE@am__append_5 = test_BilinearHinterp_MPI.sh
@MPI_TRUE@am__append_6 = test_BilinearHinterp_MPI
@MPI_TRUE@am__append_7 = test_MetSBRot_MPI.sh
@MPI_TRUE@am__append_8 = test_MetSBRot_MPI
@MPI_TRUE@am__append_9 = test_MetGridSBRot_MPI.sh
@MPI_TRUE@am__append_10 = test_MetGridSBRot_MPI
@MERRA_TRUE@am__append_11 = test_MetMERRA
@MERRA_TRUE@am__append_12 = test_MetMERRA
@MERRA2_TRUE@am__append_13 = test_MetMERRA2
@MERRA2_TRUE@am__append_14 = test_MetMERRA2
@GEOSFP_TRUE@am__append_15 = test_MetGEOSfpFcast test_MetGEOSfpAssim test_MetGEOSfp
@GEOSFP_TRUE@am__append_16 = test_MetGEOSfpFcast test_MetGEOSfpAssim test_MetGEOSfp
@NETCDF_TRUE@am__append_17 = test_NetcdfIn 
@NETCDF_TRUE@am__append_18 = test_NetcdfIn 
@NETCDF_TRUE@am__append_19 = test_netcdfIn_data_01.nc4
@MPI_TRUE@am__append_20 = test_FlockMPI.sh test_SwarmMPI.sh \
@MPI_TRUE@	test_StreamPrintMPI.sh test_StreamReadMPI.sh
@MPI_TRUE@am__append_21 = test_FlockMPI test_SwarmMPI \
@MPI_TRUE@	test_StreamPrintMPI test_StreamReadMPI
@NETCDF_TRUE@am__append_22 = test_PGenNetcdf
@NETCDF_TRUE@am__append_23 = test_PGenNetcdf
subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/depcomp $(top_srcdir)/config/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@MPI_TRUE@am__EXEEXT_1 = test_MPIGrp$(EXEEXT) \
@MPI_TRUE@	test_FileLock_MPI$(EXEEXT)
@MPI_TRUE@am__EXEEXT_2 = test_GridLatLonFieldSfc_MPI$(EXEEXT) \
@MPI_TRUE@	test_GridLatLonField3D_MPI$(EXEEXT)
@MPI_TRUE@am__EXEEXT_3 = test_BilinearHinterp_MPI$(EXEEXT)
@MPI_TRUE@am__EXEEXT_4 = test_MetSBRot_MPI$(EXEEXT)
@MPI_TRUE@am__EXEEXT_5 = test_MetGridSBRot_MPI$(EXEEXT)
@MERRA_TRUE@am__EXEEXT_6 = test_MetMERRA$(EXEEXT)
@MERRA2_TRUE@am__EXEEXT_7 = test_MetMERRA2$(EXEEXT)
@GEOSFP_TRUE@am__EXEEXT_8 = test_MetGEOSfpFcast$(EXEEXT) \
@GEOSFP_TRUE@	test_MetGEOSfpAssim$(EXEEXT) \
@GEOSFP_TRUE@	test_MetGEOSfp$(EXEEXT)
@NETCDF_TRUE@am__EXEEXT_9 = test_NetcdfIn$(EXEEXT)
@MPI_TRUE@am__EXEEXT_10 = test_FlockMPI$(EXEEXT) \
@MPI_TRUE@	test_SwarmMPI$(EXEEXT) test_StreamPrintMPI$(EXEEXT) \
@MPI_TRUE@	test_StreamReadMPI$(EXEEXT)
@NETCDF_TRUE@am__EXEEXT_11 = test_PGenNetcdf$(EXEEXT)
am_test_BalanceThetaDot1OTF_OBJECTS =  \
	test_BalanceThetaDot1OTF.$(OBJEXT) test_utils.$(OBJEXT)
test_BalanceThetaDot1OTF_OBJECTS =  \
	$(am_test_BalanceThetaDot1OTF_OBJECTS)
test_BalanceThetaDot1OTF_LDADD = $(LDADD)
am_test_BilinearHinterp_OBJECTS = test_BilinearHinterp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_BilinearHinterp_OBJECTS = $(am_test_BilinearHinterp_OBJECTS)
test_BilinearHinterp_LDADD = $(LDADD)
am_test_BilinearHinterp_MPI_OBJECTS =  \
	test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.$(OBJEXT) \
	test_BilinearHinterp_MPI-test_utils.$(OBJEXT)
test_BilinearHinterp_MPI_OBJECTS =  \
	$(am_test_BilinearHinterp_MPI_OBJECTS)
test_BilinearHinterp_MPI_LDADD = $(LDADD)
am_test_BilinearHinterp_serial_OBJECTS =  \
	test_BilinearHinterp_PGrp.$(OBJEXT) test_utils.$(OBJEXT)
test_BilinearHinterp_serial_OBJECTS =  \
	$(am_test_BilinearHinterp_serial_OBJECTS)
test_BilinearHinterp_serial_LDADD = $(LDADD)
am_test_CalGregorian_OBJECTS = test_CalGregorian.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_CalGregorian_OBJECTS = $(am_test_CalGregorian_OBJECTS)
test_CalGregorian_LDADD = $(LDADD)
am_test_ChangeVertical_OBJECTS = test_ChangeVertical.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_ChangeVertical_OBJECTS = $(am_test_ChangeVertical_OBJECTS)
test_ChangeVertical_LDADD = $(LDADD)
am_test_Configuration_OBJECTS = test_Configuration.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_Configuration_OBJECTS = $(am_test_Configuration_OBJECTS)
test_Configuration_LDADD = $(LDADD)
am_test_DensOTF_OBJECTS = test_DensOTF.$(OBJEXT) test_utils.$(OBJEXT)
test_DensOTF_OBJECTS = $(am_test_DensOTF_OBJECTS)
test_DensOTF_LDADD = $(LDADD)
am_test_Earth_OBJECTS = test_Earth.$(OBJEXT) test_utils.$(OBJEXT)
test_Earth_OBJECTS = $(am_test_Earth_OBJECTS)
test_Earth_LDADD = $(LDADD)
am_test_FileLock_OBJECTS = test_FileLock.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_FileLock_OBJECTS = $(am_test_FileLock_OBJECTS)
test_FileLock_LDADD = $(LDADD)
am_test_FileLock_MPI_OBJECTS =  \
	test_FileLock_MPI-test_FileLock_PGrp.$(OBJEXT) \
	test_FileLock_MPI-test_utils.$(OBJEXT)
test_FileLock_MPI_OBJECTS = $(am_test_FileLock_MPI_OBJECTS)
test_FileLock_MPI_LDADD = $(LDADD)
am_test_FileLock_Serial_OBJECTS = test_FileLock_PGrp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_FileLock_Serial_OBJECTS = $(am_test_FileLock_Serial_OBJECTS)
test_FileLock_Serial_LDADD = $(LDADD)
am_test_FilePath_OBJECTS = test_FilePath.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_FilePath_OBJECTS = $(am_test_FilePath_OBJECTS)
test_FilePath_LDADD = $(LDADD)
am_test_FlockMPI_OBJECTS = test_FlockMPI.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_FlockMPI_OBJECTS = $(am_test_FlockMPI_OBJECTS)
test_FlockMPI_LDADD = $(LDADD)
am_test_FlockSerial_OBJECTS = test_FlockSerial.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_FlockSerial_OBJECTS = $(am_test_FlockSerial_OBJECTS)
test_FlockSerial_LDADD = $(LDADD)
am_test_GridLatLonField3D_OBJECTS = test_GridLatLonField3D.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_GridLatLonField3D_OBJECTS = $(am_test_GridLatLonField3D_OBJECTS)
test_GridLatLonField3D_LDADD = $(LDADD)
am_test_GridLatLonField3D_MPI_OBJECTS = test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.$(OBJEXT) \
	test_GridLatLonField3D_MPI-test_utils.$(OBJEXT)
test_GridLatLonField3D_MPI_OBJECTS =  \
	$(am_test_GridLatLonField3D_MPI_OBJECTS)
test_GridLatLonField3D_MPI_LDADD = $(LDADD)
am_test_GridLatLonField3D_serial_OBJECTS =  \
	test_GridLatLonField3D_PGrp.$(OBJEXT) test_utils.$(OBJEXT)
test_GridLatLonField3D_serial_OBJECTS =  \
	$(am_test_GridLatLonField3D_serial_OBJECTS)
test_GridLatLonField3D_serial_LDADD = $(LDADD)
am_test_GridLatLonFieldSfc_OBJECTS =  \
	test_GridLatLonFieldSfc.$(OBJEXT) test_utils.$(OBJEXT)
test_GridLatLonFieldSfc_OBJECTS =  \
	$(am_test_GridLatLonFieldSfc_OBJECTS)
test_GridLatLonFieldSfc_LDADD = $(LDADD)
am_test_GridLatLonFieldSfc_MPI_OBJECTS = test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.$(OBJEXT) \
	test_GridLatLonFieldSfc_MPI-test_utils.$(OBJEXT)
test_GridLatLonFieldSfc_MPI_OBJECTS =  \
	$(am_test_GridLatLonFieldSfc_MPI_OBJECTS)
test_GridLatLonFieldSfc_MPI_LDADD = $(LDADD)
am_test_GridLatLonFieldSfc_serial_OBJECTS =  \
	test_GridLatLonFieldSfc_PGrp.$(OBJEXT) test_utils.$(OBJEXT)
test_GridLatLonFieldSfc_serial_OBJECTS =  \
	$(am_test_GridLatLonFieldSfc_serial_OBJECTS)
test_GridLatLonFieldSfc_serial_LDADD = $(LDADD)
am_test_LinearVinterp_OBJECTS = test_LinearVinterp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_LinearVinterp_OBJECTS = $(am_test_LinearVinterp_OBJECTS)
test_LinearVinterp_LDADD = $(LDADD)
am_test_LogLinearVinterp_OBJECTS = test_LogLinearVinterp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_LogLinearVinterp_OBJECTS = $(am_test_LogLinearVinterp_OBJECTS)
test_LogLinearVinterp_LDADD = $(LDADD)
am_test_MPIGrp_OBJECTS = test_MPIGrp.$(OBJEXT) test_utils.$(OBJEXT)
test_MPIGrp_OBJECTS = $(am_test_MPIGrp_OBJECTS)
test_MPIGrp_LDADD = $(LDADD)
am_test_MetGEOSfp_OBJECTS = test_MetGEOSfp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetGEOSfp_OBJECTS = $(am_test_MetGEOSfp_OBJECTS)
test_MetGEOSfp_LDADD = $(LDADD)
am_test_MetGEOSfpAssim_OBJECTS = test_MetGEOSfpAssim.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetGEOSfpAssim_OBJECTS = $(am_test_MetGEOSfpAssim_OBJECTS)
test_MetGEOSfpAssim_LDADD = $(LDADD)
am_test_MetGEOSfpFcast_OBJECTS = test_MetGEOSfpFcast.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetGEOSfpFcast_OBJECTS = $(am_test_MetGEOSfpFcast_OBJECTS)
test_MetGEOSfpFcast_LDADD = $(LDADD)
am_test_MetGridSBRot_OBJECTS = test_MetGridSBRot.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetGridSBRot_OBJECTS = $(am_test_MetGridSBRot_OBJECTS)
test_MetGridSBRot_LDADD = $(LDADD)
am_test_MetGridSBRot_MPI_OBJECTS =  \
	test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.$(OBJEXT) \
	test_MetGridSBRot_MPI-test_utils.$(OBJEXT)
test_MetGridSBRot_MPI_OBJECTS = $(am_test_MetGridSBRot_MPI_OBJECTS)
test_MetGridSBRot_MPI_LDADD = $(LDADD)
am_test_MetGridSBRot_serial_OBJECTS =  \
	test_MetGridSBRot_PGrp.$(OBJEXT) test_utils.$(OBJEXT)
test_MetGridSBRot_serial_OBJECTS =  \
	$(am_test_MetGridSBRot_serial_OBJECTS)
test_MetGridSBRot_serial_LDADD = $(LDADD)
am_test_MetMERRA_OBJECTS = test_MetMERRA.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetMERRA_OBJECTS = $(am_test_MetMERRA_OBJECTS)
test_MetMERRA_LDADD = $(LDADD)
am_test_MetMERRA2_OBJECTS = test_MetMERRA2.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetMERRA2_OBJECTS = $(am_test_MetMERRA2_OBJECTS)
test_MetMERRA2_LDADD = $(LDADD)
am_test_MetSBRot_OBJECTS = test_MetSBRot.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetSBRot_OBJECTS = $(am_test_MetSBRot_OBJECTS)
test_MetSBRot_LDADD = $(LDADD)
am_test_MetSBRot_MPI_OBJECTS =  \
	test_MetSBRot_MPI-test_MetSBRot_PGrp.$(OBJEXT) \
	test_MetSBRot_MPI-test_utils.$(OBJEXT)
test_MetSBRot_MPI_OBJECTS = $(am_test_MetSBRot_MPI_OBJECTS)
test_MetSBRot_MPI_LDADD = $(LDADD)
am_test_MetSBRot_serial_OBJECTS = test_MetSBRot_PGrp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetSBRot_serial_OBJECTS = $(am_test_MetSBRot_serial_OBJECTS)
test_MetSBRot_serial_LDADD = $(LDADD)
am_test_MetSelector_OBJECTS = test_MetSelector.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_MetSelector_OBJECTS = $(am_test_MetSelector_OBJECTS)
test_MetSelector_LDADD = $(LDADD)
am_test_NetcdfIn_OBJECTS = test_NetcdfIn.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_NetcdfIn_OBJECTS = $(am_test_NetcdfIn_OBJECTS)
test_NetcdfIn_LDADD = $(LDADD)
am_test_PAltDotOTF_OBJECTS = test_PAltDotOTF.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PAltDotOTF_OBJECTS = $(am_test_PAltDotOTF_OBJECTS)
test_PAltDotOTF_LDADD = $(LDADD)
am_test_PAltOTF_OBJECTS = test_PAltOTF.$(OBJEXT) test_utils.$(OBJEXT)
test_PAltOTF_OBJECTS = $(am_test_PAltOTF_OBJECTS)
test_PAltOTF_LDADD = $(LDADD)
am_test_PGenDisc_OBJECTS = test_PGenDisc.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PGenDisc_OBJECTS = $(am_test_PGenDisc_OBJECTS)
test_PGenDisc_LDADD = $(LDADD)
am_test_PGenFile_OBJECTS = test_PGenFile.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PGenFile_OBJECTS = $(am_test_PGenFile_OBJECTS)
test_PGenFile_LDADD = $(LDADD)
am_test_PGenGrid_OBJECTS = test_PGenGrid.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PGenGrid_OBJECTS = $(am_test_PGenGrid_OBJECTS)
test_PGenGrid_LDADD = $(LDADD)
am_test_PGenNetcdf_OBJECTS = test_PGenNetcdf.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PGenNetcdf_OBJECTS = $(am_test_PGenNetcdf_OBJECTS)
test_PGenNetcdf_LDADD = $(LDADD)
am_test_PGenRep_OBJECTS = test_PGenRep.$(OBJEXT) test_utils.$(OBJEXT)
test_PGenRep_OBJECTS = $(am_test_PGenRep_OBJECTS)
test_PGenRep_LDADD = $(LDADD)
am_test_PGenRnd_OBJECTS = test_PGenRnd.$(OBJEXT) test_utils.$(OBJEXT)
test_PGenRnd_OBJECTS = $(am_test_PGenRnd_OBJECTS)
test_PGenRnd_LDADD = $(LDADD)
am_test_PGenRndDisc_OBJECTS = test_PGenRndDisc.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PGenRndDisc_OBJECTS = $(am_test_PGenRndDisc_OBJECTS)
test_PGenRndDisc_LDADD = $(LDADD)
am_test_Parcel_OBJECTS = test_Parcel.$(OBJEXT) test_utils.$(OBJEXT)
test_Parcel_OBJECTS = $(am_test_Parcel_OBJECTS)
test_Parcel_LDADD = $(LDADD)
am_test_PressOTF_OBJECTS = test_PressOTF.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_PressOTF_OBJECTS = $(am_test_PressOTF_OBJECTS)
test_PressOTF_LDADD = $(LDADD)
am_test_RandomSrc_OBJECTS = test_RandomSrc.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_RandomSrc_OBJECTS = $(am_test_RandomSrc_OBJECTS)
test_RandomSrc_LDADD = $(LDADD)
am_test_SerialGrp_OBJECTS = test_SerialGrp.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_SerialGrp_OBJECTS = $(am_test_SerialGrp_OBJECTS)
test_SerialGrp_LDADD = $(LDADD)
am_test_StreamDump_Load_OBJECTS = test_StreamDump_Load.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_StreamDump_Load_OBJECTS = $(am_test_StreamDump_Load_OBJECTS)
test_StreamDump_Load_LDADD = $(LDADD)
am_test_StreamPrint_OBJECTS = test_StreamPrint.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_StreamPrint_OBJECTS = $(am_test_StreamPrint_OBJECTS)
test_StreamPrint_LDADD = $(LDADD)
am_test_StreamPrintMPI_OBJECTS = test_StreamPrintMPI.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_StreamPrintMPI_OBJECTS = $(am_test_StreamPrintMPI_OBJECTS)
test_StreamPrintMPI_LDADD = $(LDADD)
am_test_StreamRead_OBJECTS = test_StreamRead.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_StreamRead_OBJECTS = $(am_test_StreamRead_OBJECTS)
test_StreamRead_LDADD = $(LDADD)
am_test_StreamReadMPI_OBJECTS = test_StreamReadMPI.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_StreamReadMPI_OBJECTS = $(am_test_StreamReadMPI_OBJECTS)
test_StreamReadMPI_LDADD = $(LDADD)
am_test_SwarmMPI_OBJECTS = test_SwarmMPI.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_SwarmMPI_OBJECTS = $(am_test_SwarmMPI_OBJECTS)
test_SwarmMPI_LDADD = $(LDADD)
am_test_SwarmSerial_OBJECTS = test_SwarmSerial.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_SwarmSerial_OBJECTS = $(am_test_SwarmSerial_OBJECTS)
test_SwarmSerial_LDADD = $(LDADD)
am_test_ThetaDotOTF_OBJECTS = test_ThetaDotOTF.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_ThetaDotOTF_OBJECTS = $(am_test_ThetaDotOTF_OBJECTS)
test_ThetaDotOTF_LDADD = $(LDADD)
am_test_ThetaOTF_OBJECTS = test_ThetaOTF.$(OBJEXT) \
	test_utils.$(OBJEXT)
test_ThetaOTF_OBJECTS = $(am_test_ThetaOTF_OBJECTS)
test_ThetaOTF_LDADD = $(LDADD)
am_test_TropOTF_OBJECTS = test_TropOTF.$(OBJEXT) test_utils.$(OBJEXT)
test_TropOTF_OBJECTS = $(am_test_TropOTF_OBJECTS)
test_TropOTF_LDADD = $(LDADD)
am_test_traj000_OBJECTS = test_traj000.$(OBJEXT) test_utils.$(OBJEXT)
test_traj000_OBJECTS = $(am_test_traj000_OBJECTS)
test_traj000_LDADD = $(LDADD)
am_test_traj001_OBJECTS = test_traj001.$(OBJEXT) test_utils.$(OBJEXT)
test_traj001_OBJECTS = $(am_test_traj001_OBJECTS)
test_traj001_LDADD = $(LDADD)
am_test_traj010_OBJECTS = test_traj010.$(OBJEXT) test_utils.$(OBJEXT)
test_traj010_OBJECTS = $(am_test_traj010_OBJECTS)
test_traj010_LDADD = $(LDADD)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(test_BalanceThetaDot1OTF_SOURCES) \
	$(test_BilinearHinterp_SOURCES) \
	$(test_BilinearHinterp_MPI_SOURCES) \
	$(test_BilinearHinterp_serial_SOURCES) \
	$(test_CalGregorian_SOURCES) $(test_ChangeVertical_SOURCES) \
	$(test_Configuration_SOURCES) $(test_DensOTF_SOURCES) \
	$(test_Earth_SOURCES) $(test_FileLock_SOURCES) \
	$(test_FileLock_MPI_SOURCES) $(test_FileLock_Serial_SOURCES) \
	$(test_FilePath_SOURCES) $(test_FlockMPI_SOURCES) \
	$(test_FlockSerial_SOURCES) $(test_GridLatLonField3D_SOURCES) \
	$(test_GridLatLonField3D_MPI_SOURCES) \
	$(test_GridLatLonField3D_serial_SOURCES) \
	$(test_GridLatLonFieldSfc_SOURCES) \
	$(test_GridLatLonFieldSfc_MPI_SOURCES) \
	$(test_GridLatLonFieldSfc_serial_SOURCES) \
	$(test_LinearVinterp_SOURCES) $(test_LogLinearVinterp_SOURCES) \
	$(test_MPIGrp_SOURCES) $(test_MetGEOSfp_SOURCES) \
	$(test_MetGEOSfpAssim_SOURCES) $(test_MetGEOSfpFcast_SOURCES) \
	$(test_MetGridSBRot_SOURCES) $(test_MetGridSBRot_MPI_SOURCES) \
	$(test_MetGridSBRot_serial_SOURCES) $(test_MetMERRA_SOURCES) \
	$(test_MetMERRA2_SOURCES) $(test_MetSBRot_SOURCES) \
	$(test_MetSBRot_MPI_SOURCES) $(test_MetSBRot_serial_SOURCES) \
	$(test_MetSelector_SOURCES) $(test_NetcdfIn_SOURCES) \
	$(test_PAltDotOTF_SOURCES) $(test_PAltOTF_SOURCES) \
	$(test_PGenDisc_SOURCES) $(test_PGenFile_SOURCES) \
	$(test_PGenGrid_SOURCES) $(test_PGenNetcdf_SOURCES) \
	$(test_PGenRep_SOURCES) $(test_PGenRnd_SOURCES) \
	$(test_PGenRndDisc_SOURCES) $(test_Parcel_SOURCES) \
	$(test_PressOTF_SOURCES) $(test_RandomSrc_SOURCES) \
	$(test_SerialGrp_SOURCES) $(test_StreamDump_Load_SOURCES) \
	$(test_StreamPrint_SOURCES) $(test_StreamPrintMPI_SOURCES) \
	$(test_StreamRead_SOURCES) $(test_StreamReadMPI_SOURCES) \
	$(test_SwarmMPI_SOURCES) $(test_SwarmSerial_SOURCES) \
	$(test_ThetaDotOTF_SOURCES) $(test_ThetaOTF_SOURCES) \
	$(test_TropOTF_SOURCES) $(test_traj000_SOURCES) \
	$(test_traj001_SOURCES) $(test_traj010_SOURCES)
DIST_SOURCES = $(test_BalanceThetaDot1OTF_SOURCES) \
	$(test_BilinearHinterp_SOURCES) \
	$(test_BilinearHinterp_MPI_SOURCES) \
	$(test_BilinearHinterp_serial_SOURCES) \
	$(test_CalGregorian_SOURCES) $(test_ChangeVertical_SOURCES) \
	$(test_Configuration_SOURCES) $(test_DensOTF_SOURCES) \
	$(test_Earth_SOURCES) $(test_FileLock_SOURCES) \
	$(test_FileLock_MPI_SOURCES) $(test_FileLock_Serial_SOURCES) \
	$(test_FilePath_SOURCES) $(test_FlockMPI_SOURCES) \
	$(test_FlockSerial_SOURCES) $(test_GridLatLonField3D_SOURCES) \
	$(test_GridLatLonField3D_MPI_SOURCES) \
	$(test_GridLatLonField3D_serial_SOURCES) \
	$(test_GridLatLonFieldSfc_SOURCES) \
	$(test_GridLatLonFieldSfc_MPI_SOURCES) \
	$(test_GridLatLonFieldSfc_serial_SOURCES) \
	$(test_LinearVinterp_SOURCES) $(test_LogLinearVinterp_SOURCES) \
	$(test_MPIGrp_SOURCES) $(test_MetGEOSfp_SOURCES) \
	$(test_MetGEOSfpAssim_SOURCES) $(test_MetGEOSfpFcast_SOURCES) \
	$(test_MetGridSBRot_SOURCES) $(test_MetGridSBRot_MPI_SOURCES) \
	$(test_MetGridSBRot_serial_SOURCES) $(test_MetMERRA_SOURCES) \
	$(test_MetMERRA2_SOURCES) $(test_MetSBRot_SOURCES) \
	$(test_MetSBRot_MPI_SOURCES) $(test_MetSBRot_serial_SOURCES) \
	$(test_MetSelector_SOURCES) $(test_NetcdfIn_SOURCES) \
	$(test_PAltDotOTF_SOURCES) $(test_PAltOTF_SOURCES) \
	$(test_PGenDisc_SOURCES) $(test_PGenFile_SOURCES) \
	$(test_PGenGrid_SOURCES) $(test_PGenNetcdf_SOURCES) \
	$(test_PGenRep_SOURCES) $(test_PGenRnd_SOURCES) \
	$(test_PGenRndDisc_SOURCES) $(test_Parcel_SOURCES) \
	$(test_PressOTF_SOURCES) $(test_RandomSrc_SOURCES) \
	$(test_SerialGrp_SOURCES) $(test_StreamDump_Load_SOURCES) \
	$(test_StreamPrint_SOURCES) $(test_StreamPrintMPI_SOURCES) \
	$(test_StreamRead_SOURCES) $(test_StreamReadMPI_SOURCES) \
	$(test_SwarmMPI_SOURCES) $(test_SwarmSerial_SOURCES) \
	$(test_ThetaDotOTF_SOURCES) $(test_ThetaOTF_SOURCES) \
	$(test_TropOTF_SOURCES) $(test_traj000_SOURCES) \
	$(test_traj001_SOURCES) $(test_traj010_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXDEF_DOUBLE = @DOXDEF_DOUBLE@
DOXDEF_MPI = @DOXDEF_MPI@
DOXYGENRUN = @DOXYGENRUN@
DOX_PDFLATEX = @DOX_PDFLATEX@
DOX_RUN_LATEX = @DOX_RUN_LATEX@
DOX_RUN_MAKEINDEX = @DOX_RUN_MAKEINDEX@
DO_DOUBLE = @DO_DOUBLE@
DO_GEOSFP = @DO_GEOSFP@
DO_LONGARGS = @DO_LONGARGS@
DO_MERRA = @DO_MERRA@
DO_MERRA2 = @DO_MERRA2@
DO_MPI = @DO_MPI@
DO_NETCDF = @DO_NETCDF@
DO_WRAP0 = @DO_WRAP0@
DO_WRAP180 = @DO_WRAP180@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MPIRUN = @MPIRUN@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
use_mpicc = @use_mpicc@
use_mpicxx = @use_mpicxx@
LDADD = -lgigatraj
AM_LDFLAGS = -L ../lib/
GIGATRAJ_INCLUDE = -I$(top_srcdir)/include/
AM_CPPFLAGS = $(GIGATRAJ_INCLUDE)
EXTRA_DIST = test_Configuration.sh test_MPI.sh test_MPIGrp.sh \
	test_FileLock_MPI.sh test_GridLatLonField3D_MPI.sh \
	test_GridLatLonFieldSfc_MPI.sh test_BilinearHinterp_MPI.sh \
	test_MetSBRot_MPI.sh test_MetGridSBRot_MPI.sh \
	parcels_test00.dat $(am__append_19) test_FlockMPI.sh \
	test_SwarmMPI.sh test_StreamPrintMPI.sh test_StreamReadMPI.sh \
	test_PGenFile.dat test_PGenFile_fmt.dat test_traj001.dat \
	test_gtmodel_s01.sh gtmodel_s01_input.txt \
	gtmodel_s01_original.txt
@MPI_TRUE@test_FileLock_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MPI_TRUE@test_GridLatLonFieldSfc_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MPI_TRUE@test_GridLatLonField3D_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MPI_TRUE@test_BilinearHinterp_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MPI_TRUE@test_MetSBRot_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MPI_TRUE@test_MetGridSBRot_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MERRA_TRUE@test_MetMERRA_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@MERRA2_TRUE@test_MetMERRA2_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@GEOSFP_TRUE@test_MetGEOSfpFcast_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@GEOSFP_TRUE@test_MetGEOSfpAssim_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI
@GEOSFP_TRUE@test_MetGEOSfp_MPI_CPPFLAGS = $(AM_CPPFLAGS) -DUSING_MPI

###########  Sources
test_RandomSrc_SOURCES = test_RandomSrc.cc test_utils.cc test_utils.hh
test_RandomSrc_DEPENDENCIES = ../lib/libgigatraj.a
test_Configuration_SOURCES = test_Configuration.cc test_utils.cc test_utils.hh
test_Configuration_DEPENDENCIES = ../lib/libgigatraj.a
test_FilePath_SOURCES = test_FilePath.cc test_utils.cc test_utils.hh
test_FilePath_DEPENDENCIES = ../lib/libgigatraj.a
test_FileLock_SOURCES = test_FileLock.cc test_utils.cc test_utils.hh
test_FileLock_DEPENDENCIES = ../lib/libgigatraj.a
test_FileLock_Serial_SOURCES = test_FileLock_PGrp.cc test_utils.cc test_utils.hh
test_FileLock_Serial_DEPENDENCIES = ../lib/libgigatraj.a
test_FileLock_MPI_SOURCES = test_FileLock_PGrp.cc test_utils.cc test_utils.hh
test_FileLock_MPI_DEPENDENCIES = ../lib/libgigatraj.a
test_CalGregorian_SOURCES = test_CalGregorian.cc test_utils.cc test_utils.hh
test_CalGregorian_DEPENDENCIES = ../lib/libgigatraj.a
test_Earth_SOURCES = test_Earth.cc test_utils.cc test_utils.hh
test_Earth_DEPENDENCIES = ../lib/libgigatraj.a
test_SerialGrp_SOURCES = test_SerialGrp.cc test_utils.cc test_utils.hh
test_SerialGrp_DEPENDENCIES = ../lib/libgigatraj.a
test_MPIGrp_SOURCES = test_MPIGrp.cc test_utils.cc test_utils.hh
test_MPIGrp_DEPENDENCIES = ../lib/libgigatraj.a
test_GridLatLonFieldSfc_SOURCES = test_GridLatLonFieldSfc.cc test_utils.cc test_utils.hh
test_GridLatLonFieldSfc_DEPENDENCIES = ../lib/libgigatraj.a
test_GridLatLonField3D_SOURCES = test_GridLatLonField3D.cc test_utils.cc test_utils.hh
test_GridLatLonField3D_DEPENDENCIES = ../lib/libgigatraj.a
test_GridLatLonFieldSfc_serial_SOURCES = test_GridLatLonFieldSfc_PGrp.cc test_utils.cc
test_GridLatLonFieldSfc_serial_DEPENDENCIES = ../lib/libgigatraj.a
test_GridLatLonFieldSfc_MPI_SOURCES = test_GridLatLonFieldSfc_PGrp.cc test_utils.cc
test_GridLatLonFieldSfc_MPI_DEPENDENCIES = ../lib/libgigatraj.a
test_GridLatLonField3D_serial_SOURCES = test_GridLatLonField3D_PGrp.cc test_utils.cc
test_GridLatLonField3D_serial_DEPENDENCIES = ../lib/libgigatraj.a
test_GridLatLonField3D_MPI_SOURCES = test_GridLatLonField3D_PGrp.cc test_utils.cc
test_GridLatLonField3D_MPI_DEPENDENCIES = ../lib/libgigatraj.a
test_LinearVinterp_SOURCES = test_LinearVinterp.cc test_utils.cc test_utils.hh
test_LinearVinterp_DEPENDENCIES = ../lib/libgigatraj.a
test_LogLinearVinterp_SOURCES = test_LogLinearVinterp.cc test_utils.cc test_utils.hh
test_LogLinearVinterp_DEPENDENCIES = ../lib/libgigatraj.a
test_BilinearHinterp_SOURCES = test_BilinearHinterp.cc test_utils.cc test_utils.hh
test_BilinearHinterp_DEPENDENCIES = ../lib/libgigatraj.a
test_BilinearHinterp_serial_SOURCES = test_BilinearHinterp_PGrp.cc test_utils.cc test_utils.hh
test_BilinearHinterp_serial_DEPENDENCIES = ../lib/libgigatraj.a
test_BilinearHinterp_MPI_SOURCES = test_BilinearHinterp_PGrp.cc test_utils.cc test_utils.hh
test_BilinearHinterp_MPI_DEPENDENCIES = ../lib/libgigatraj.a
test_ThetaOTF_SOURCES = test_ThetaOTF.cc test_utils.cc test_utils.hh
test_ThetaOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_TropOTF_SOURCES = test_TropOTF.cc test_utils.cc test_utils.hh
test_TropOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_PressOTF_SOURCES = test_PressOTF.cc test_utils.cc test_utils.hh
test_PressOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_PAltOTF_SOURCES = test_PAltOTF.cc test_utils.cc test_utils.hh
test_PAltOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_PAltDotOTF_SOURCES = test_PAltDotOTF.cc test_utils.cc test_utils.hh
test_PAltDotOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_DensOTF_SOURCES = test_DensOTF.cc test_utils.cc test_utils.hh
test_DensOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_ThetaDotOTF_SOURCES = test_ThetaDotOTF.cc test_utils.cc test_utils.hh
test_ThetaDotOTF_DEPENDENCIES = ../lib/libgigatraj.a
test_BalanceThetaDot1OTF_SOURCES = test_BalanceThetaDot1OTF.cc test_utils.cc  test_utils.hh
test_BalanceThetaDot1OTF_DEPENDENCIES = ../lib/libgigatraj.a
test_MetSBRot_SOURCES = test_MetSBRot.cc test_utils.cc test_utils.hh
test_MetSBRot_DEPENDENCIES = ../lib/libgigatraj.a
test_MetSBRot_serial_SOURCES = test_MetSBRot_PGrp.cc test_utils.cc test_utils.hh
test_MetSBRot_serial_DEPENDENCIES = ../lib/libgigatraj.a
test_MetSBRot_MPI_SOURCES = test_MetSBRot_PGrp.cc test_utils.cc test_utils.hh
test_MetSBRot_MPI_DEPENDENCIES = ../lib/libgigatraj.a
test_MetGridSBRot_SOURCES = test_MetGridSBRot.cc test_utils.cc test_utils.hh
test_MetGridSBRot_DEPENDENCIES = ../lib/libgigatraj.a
test_MetGridSBRot_serial_SOURCES = test_MetGridSBRot_PGrp.cc test_utils.cc test_utils.hh
test_MetGridSBRot_serial_DEPENDENCIES = ../lib/libgigatraj.a
test_MetGridSBRot_MPI_SOURCES = test_MetGridSBRot_PGrp.cc test_utils.cc test_utils.hh
test_MetGridSBRot_MPI_DEPENDENCIES = ../lib/libgigatraj.a
test_MetMERRA_SOURCES = test_MetMERRA.cc test_utils.cc test_utils.hh
test_MetMERRA_DEPENDENCIES = ../lib/libgigatraj.a
test_MetMERRA2_SOURCES = test_MetMERRA2.cc test_utils.cc test_utils.hh
test_MetMERRA2_DEPENDENCIES = ../lib/libgigatraj.a
test_MetGEOSfpFcast_SOURCES = test_MetGEOSfpFcast.cc test_utils.cc test_utils.hh
test_MetGEOSfpFcast_DEPENDENCIES = ../lib/libgigatraj.a
test_MetGEOSfpAssim_SOURCES = test_MetGEOSfpAssim.cc test_utils.cc test_utils.hh
test_MetGEOSfpAssim_DEPENDENCIES = ../lib/libgigatraj.a
test_MetGEOSfp_SOURCES = test_MetGEOSfp.cc test_utils.cc test_utils.hh
test_MetGEOSfp_DEPENDENCIES = ../lib/libgigatraj.a
test_MetSelector_SOURCES = test_MetSelector.cc test_utils.cc test_utils.hh
test_MetSelector_DEPENDENCIES = ../lib/libgigatraj.a
test_Parcel_SOURCES = test_Parcel.cc test_utils.cc test_utils.hh
test_Parcel_DEPENDENCIES = ../lib/libgigatraj.a
test_ChangeVertical_SOURCES = test_ChangeVertical.cc test_utils.cc test_utils.hh
test_ChangeVertical_DEPENDENCIES = ../lib/libgigatraj.a
test_StreamDump_Load_SOURCES = test_StreamDump_Load.cc test_utils.cc test_utils.hh
test_StreamDump_Load_DEPENDENCIES = ../lib/libgigatraj.a
test_StreamRead_SOURCES = test_StreamRead.cc test_utils.cc test_utils.hh
test_StreamRead_DEPENDENCIES = ../lib/libgigatraj.a
test_NetcdfIn_SOURCES = test_NetcdfIn.cc test_utils.cc test_utils.hh
test_NetcdfIn_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenNetcdf_SOURCES = test_PGenNetcdf.cc test_utils.cc test_utils.hh
test_PGenNetcdf_DEPENDENCIES = ../lib/libgigatraj.a
test_StreamPrint_SOURCES = test_StreamPrint.cc test_utils.cc test_utils.hh
test_StreamPrint_DEPENDENCIES = ../lib/libgigatraj.a
test_FlockSerial_SOURCES = test_FlockSerial.cc test_utils.cc test_utils.hh
test_FlockSerial_DEPENDENCIES = ../lib/libgigatraj.a
test_SwarmSerial_SOURCES = test_SwarmSerial.cc test_utils.cc test_utils.hh
test_SwarmSerial_DEPENDENCIES = ../lib/libgigatraj.a
test_FlockMPI_SOURCES = test_FlockMPI.cc test_utils.cc test_utils.hh
test_FlockMPI_DEPENDENCIES = ../lib/libgigatraj.a
test_SwarmMPI_SOURCES = test_SwarmMPI.cc test_utils.cc test_utils.hh
test_SwarmMPI_DEPENDENCIES = ../lib/libgigatraj.a
test_StreamPrintMPI_SOURCES = test_StreamPrintMPI.cc test_utils.cc test_utils.hh
test_StreamPrintMPI_DEPENDENCIES = ../lib/libgigatraj.a
test_StreamReadMPI_SOURCES = test_StreamReadMPI.cc test_utils.cc test_utils.hh
test_StreamReadMPI_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenRep_SOURCES = test_PGenRep.cc test_utils.cc test_utils.hh
test_PGenRep_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenGrid_SOURCES = test_PGenGrid.cc test_utils.cc test_utils.hh
test_PGenGrid_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenRnd_SOURCES = test_PGenRnd.cc test_utils.cc test_utils.hh
test_PGenRnd_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenRndDisc_SOURCES = test_PGenRndDisc.cc test_utils.cc test_utils.hh
test_PGenRndDisc_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenDisc_SOURCES = test_PGenDisc.cc test_utils.cc test_utils.hh
test_PGenDisc_DEPENDENCIES = ../lib/libgigatraj.a
test_PGenFile_SOURCES = test_PGenFile.cc test_utils.cc test_utils.hh
test_PGenFile_DEPENDENCIES = ../lib/libgigatraj.a
test_traj000_SOURCES = test_traj000.cc test_utils.cc test_utils.hh
test_traj000_DEPENDENCIES = ../lib/libgigatraj.a
test_traj001_SOURCES = test_traj001.cc test_utils.cc test_utils.hh
test_traj001_DEPENDENCIES = ../lib/libgigatraj.a
test_traj010_SOURCES = test_traj010.cc test_utils.cc test_utils.hh
test_traj010_DEPENDENCIES = ../lib/libgigatraj.a
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

test_BalanceThetaDot1OTF$(EXEEXT): $(test_BalanceThetaDot1OTF_OBJECTS) $(test_BalanceThetaDot1OTF_DEPENDENCIES) $(EXTRA_test_BalanceThetaDot1OTF_DEPENDENCIES) 
	@rm -f test_BalanceThetaDot1OTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_BalanceThetaDot1OTF_OBJECTS) $(test_BalanceThetaDot1OTF_LDADD) $(LIBS)

test_BilinearHinterp$(EXEEXT): $(test_BilinearHinterp_OBJECTS) $(test_BilinearHinterp_DEPENDENCIES) $(EXTRA_test_BilinearHinterp_DEPENDENCIES) 
	@rm -f test_BilinearHinterp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_BilinearHinterp_OBJECTS) $(test_BilinearHinterp_LDADD) $(LIBS)

test_BilinearHinterp_MPI$(EXEEXT): $(test_BilinearHinterp_MPI_OBJECTS) $(test_BilinearHinterp_MPI_DEPENDENCIES) $(EXTRA_test_BilinearHinterp_MPI_DEPENDENCIES) 
	@rm -f test_BilinearHinterp_MPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_BilinearHinterp_MPI_OBJECTS) $(test_BilinearHinterp_MPI_LDADD) $(LIBS)

test_BilinearHinterp_serial$(EXEEXT): $(test_BilinearHinterp_serial_OBJECTS) $(test_BilinearHinterp_serial_DEPENDENCIES) $(EXTRA_test_BilinearHinterp_serial_DEPENDENCIES) 
	@rm -f test_BilinearHinterp_serial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_BilinearHinterp_serial_OBJECTS) $(test_BilinearHinterp_serial_LDADD) $(LIBS)

test_CalGregorian$(EXEEXT): $(test_CalGregorian_OBJECTS) $(test_CalGregorian_DEPENDENCIES) $(EXTRA_test_CalGregorian_DEPENDENCIES) 
	@rm -f test_CalGregorian$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_CalGregorian_OBJECTS) $(test_CalGregorian_LDADD) $(LIBS)

test_ChangeVertical$(EXEEXT): $(test_ChangeVertical_OBJECTS) $(test_ChangeVertical_DEPENDENCIES) $(EXTRA_test_ChangeVertical_DEPENDENCIES) 
	@rm -f test_ChangeVertical$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ChangeVertical_OBJECTS) $(test_ChangeVertical_LDADD) $(LIBS)

test_Configuration$(EXEEXT): $(test_Configuration_OBJECTS) $(test_Configuration_DEPENDENCIES) $(EXTRA_test_Configuration_DEPENDENCIES) 
	@rm -f test_Configuration$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Configuration_OBJECTS) $(test_Configuration_LDADD) $(LIBS)

test_DensOTF$(EXEEXT): $(test_DensOTF_OBJECTS) $(test_DensOTF_DEPENDENCIES) $(EXTRA_test_DensOTF_DEPENDENCIES) 
	@rm -f test_DensOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_DensOTF_OBJECTS) $(test_DensOTF_LDADD) $(LIBS)

test_Earth$(EXEEXT): $(test_Earth_OBJECTS) $(test_Earth_DEPENDENCIES) $(EXTRA_test_Earth_DEPENDENCIES) 
	@rm -f test_Earth$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Earth_OBJECTS) $(test_Earth_LDADD) $(LIBS)

test_FileLock$(EXEEXT): $(test_FileLock_OBJECTS) $(test_FileLock_DEPENDENCIES) $(EXTRA_test_FileLock_DEPENDENCIES) 
	@rm -f test_FileLock$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_FileLock_OBJECTS) $(test_FileLock_LDADD) $(LIBS)

test_FileLock_MPI$(EXEEXT): $(test_FileLock_MPI_OBJECTS) $(test_FileLock_MPI_DEPENDENCIES) $(EXTRA_test_FileLock_MPI_DEPENDENCIES) 
	@rm -f test_FileLock_MPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_FileLock_MPI_OBJECTS) $(test_FileLock_MPI_LDADD) $(LIBS)

test_FileLock_Serial$(EXEEXT): $(test_FileLock_Serial_OBJECTS) $(test_FileLock_Serial_DEPENDENCIES) $(EXTRA_test_FileLock_Serial_DEPENDENCIES) 
	@rm -f test_FileLock_Serial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_FileLock_Serial_OBJECTS) $(test_FileLock_Serial_LDADD) $(LIBS)

test_FilePath$(EXEEXT): $(test_FilePath_OBJECTS) $(test_FilePath_DEPENDENCIES) $(EXTRA_test_FilePath_DEPENDENCIES) 
	@rm -f test_FilePath$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_FilePath_OBJECTS) $(test_FilePath_LDADD) $(LIBS)

test_FlockMPI$(EXEEXT): $(test_FlockMPI_OBJECTS) $(test_FlockMPI_DEPENDENCIES) $(EXTRA_test_FlockMPI_DEPENDENCIES) 
	@rm -f test_FlockMPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_FlockMPI_OBJECTS) $(test_FlockMPI_LDADD) $(LIBS)

test_FlockSerial$(EXEEXT): $(test_FlockSerial_OBJECTS) $(test_FlockSerial_DEPENDENCIES) $(EXTRA_test_FlockSerial_DEPENDENCIES) 
	@rm -f test_FlockSerial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_FlockSerial_OBJECTS) $(test_FlockSerial_LDADD) $(LIBS)

test_GridLatLonField3D$(EXEEXT): $(test_GridLatLonField3D_OBJECTS) $(test_GridLatLonField3D_DEPENDENCIES) $(EXTRA_test_GridLatLonField3D_DEPENDENCIES) 
	@rm -f test_GridLatLonField3D$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_GridLatLonField3D_OBJECTS) $(test_GridLatLonField3D_LDADD) $(LIBS)

test_GridLatLonField3D_MPI$(EXEEXT): $(test_GridLatLonField3D_MPI_OBJECTS) $(test_GridLatLonField3D_MPI_DEPENDENCIES) $(EXTRA_test_GridLatLonField3D_MPI_DEPENDENCIES) 
	@rm -f test_GridLatLonField3D_MPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_GridLatLonField3D_MPI_OBJECTS) $(test_GridLatLonField3D_MPI_LDADD) $(LIBS)

test_GridLatLonField3D_serial$(EXEEXT): $(test_GridLatLonField3D_serial_OBJECTS) $(test_GridLatLonField3D_serial_DEPENDENCIES) $(EXTRA_test_GridLatLonField3D_serial_DEPENDENCIES) 
	@rm -f test_GridLatLonField3D_serial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_GridLatLonField3D_serial_OBJECTS) $(test_GridLatLonField3D_serial_LDADD) $(LIBS)

test_GridLatLonFieldSfc$(EXEEXT): $(test_GridLatLonFieldSfc_OBJECTS) $(test_GridLatLonFieldSfc_DEPENDENCIES) $(EXTRA_test_GridLatLonFieldSfc_DEPENDENCIES) 
	@rm -f test_GridLatLonFieldSfc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_GridLatLonFieldSfc_OBJECTS) $(test_GridLatLonFieldSfc_LDADD) $(LIBS)

test_GridLatLonFieldSfc_MPI$(EXEEXT): $(test_GridLatLonFieldSfc_MPI_OBJECTS) $(test_GridLatLonFieldSfc_MPI_DEPENDENCIES) $(EXTRA_test_GridLatLonFieldSfc_MPI_DEPENDENCIES) 
	@rm -f test_GridLatLonFieldSfc_MPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_GridLatLonFieldSfc_MPI_OBJECTS) $(test_GridLatLonFieldSfc_MPI_LDADD) $(LIBS)

test_GridLatLonFieldSfc_serial$(EXEEXT): $(test_GridLatLonFieldSfc_serial_OBJECTS) $(test_GridLatLonFieldSfc_serial_DEPENDENCIES) $(EXTRA_test_GridLatLonFieldSfc_serial_DEPENDENCIES) 
	@rm -f test_GridLatLonFieldSfc_serial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_GridLatLonFieldSfc_serial_OBJECTS) $(test_GridLatLonFieldSfc_serial_LDADD) $(LIBS)

test_LinearVinterp$(EXEEXT): $(test_LinearVinterp_OBJECTS) $(test_LinearVinterp_DEPENDENCIES) $(EXTRA_test_LinearVinterp_DEPENDENCIES) 
	@rm -f test_LinearVinterp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_LinearVinterp_OBJECTS) $(test_LinearVinterp_LDADD) $(LIBS)

test_LogLinearVinterp$(EXEEXT): $(test_LogLinearVinterp_OBJECTS) $(test_LogLinearVinterp_DEPENDENCIES) $(EXTRA_test_LogLinearVinterp_DEPENDENCIES) 
	@rm -f test_LogLinearVinterp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_LogLinearVinterp_OBJECTS) $(test_LogLinearVinterp_LDADD) $(LIBS)

test_MPIGrp$(EXEEXT): $(test_MPIGrp_OBJECTS) $(test_MPIGrp_DEPENDENCIES) $(EXTRA_test_MPIGrp_DEPENDENCIES) 
	@rm -f test_MPIGrp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MPIGrp_OBJECTS) $(test_MPIGrp_LDADD) $(LIBS)

test_MetGEOSfp$(EXEEXT): $(test_MetGEOSfp_OBJECTS) $(test_MetGEOSfp_DEPENDENCIES) $(EXTRA_test_MetGEOSfp_DEPENDENCIES) 
	@rm -f test_MetGEOSfp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetGEOSfp_OBJECTS) $(test_MetGEOSfp_LDADD) $(LIBS)

test_MetGEOSfpAssim$(EXEEXT): $(test_MetGEOSfpAssim_OBJECTS) $(test_MetGEOSfpAssim_DEPENDENCIES) $(EXTRA_test_MetGEOSfpAssim_DEPENDENCIES) 
	@rm -f test_MetGEOSfpAssim$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetGEOSfpAssim_OBJECTS) $(test_MetGEOSfpAssim_LDADD) $(LIBS)

test_MetGEOSfpFcast$(EXEEXT): $(test_MetGEOSfpFcast_OBJECTS) $(test_MetGEOSfpFcast_DEPENDENCIES) $(EXTRA_test_MetGEOSfpFcast_DEPENDENCIES) 
	@rm -f test_MetGEOSfpFcast$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetGEOSfpFcast_OBJECTS) $(test_MetGEOSfpFcast_LDADD) $(LIBS)

test_MetGridSBRot$(EXEEXT): $(test_MetGridSBRot_OBJECTS) $(test_MetGridSBRot_DEPENDENCIES) $(EXTRA_test_MetGridSBRot_DEPENDENCIES) 
	@rm -f test_MetGridSBRot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetGridSBRot_OBJECTS) $(test_MetGridSBRot_LDADD) $(LIBS)

test_MetGridSBRot_MPI$(EXEEXT): $(test_MetGridSBRot_MPI_OBJECTS) $(test_MetGridSBRot_MPI_DEPENDENCIES) $(EXTRA_test_MetGridSBRot_MPI_DEPENDENCIES) 
	@rm -f test_MetGridSBRot_MPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetGridSBRot_MPI_OBJECTS) $(test_MetGridSBRot_MPI_LDADD) $(LIBS)

test_MetGridSBRot_serial$(EXEEXT): $(test_MetGridSBRot_serial_OBJECTS) $(test_MetGridSBRot_serial_DEPENDENCIES) $(EXTRA_test_MetGridSBRot_serial_DEPENDENCIES) 
	@rm -f test_MetGridSBRot_serial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetGridSBRot_serial_OBJECTS) $(test_MetGridSBRot_serial_LDADD) $(LIBS)

test_MetMERRA$(EXEEXT): $(test_MetMERRA_OBJECTS) $(test_MetMERRA_DEPENDENCIES) $(EXTRA_test_MetMERRA_DEPENDENCIES) 
	@rm -f test_MetMERRA$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetMERRA_OBJECTS) $(test_MetMERRA_LDADD) $(LIBS)

test_MetMERRA2$(EXEEXT): $(test_MetMERRA2_OBJECTS) $(test_MetMERRA2_DEPENDENCIES) $(EXTRA_test_MetMERRA2_DEPENDENCIES) 
	@rm -f test_MetMERRA2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetMERRA2_OBJECTS) $(test_MetMERRA2_LDADD) $(LIBS)

test_MetSBRot$(EXEEXT): $(test_MetSBRot_OBJECTS) $(test_MetSBRot_DEPENDENCIES) $(EXTRA_test_MetSBRot_DEPENDENCIES) 
	@rm -f test_MetSBRot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetSBRot_OBJECTS) $(test_MetSBRot_LDADD) $(LIBS)

test_MetSBRot_MPI$(EXEEXT): $(test_MetSBRot_MPI_OBJECTS) $(test_MetSBRot_MPI_DEPENDENCIES) $(EXTRA_test_MetSBRot_MPI_DEPENDENCIES) 
	@rm -f test_MetSBRot_MPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetSBRot_MPI_OBJECTS) $(test_MetSBRot_MPI_LDADD) $(LIBS)

test_MetSBRot_serial$(EXEEXT): $(test_MetSBRot_serial_OBJECTS) $(test_MetSBRot_serial_DEPENDENCIES) $(EXTRA_test_MetSBRot_serial_DEPENDENCIES) 
	@rm -f test_MetSBRot_serial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetSBRot_serial_OBJECTS) $(test_MetSBRot_serial_LDADD) $(LIBS)

test_MetSelector$(EXEEXT): $(test_MetSelector_OBJECTS) $(test_MetSelector_DEPENDENCIES) $(EXTRA_test_MetSelector_DEPENDENCIES) 
	@rm -f test_MetSelector$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MetSelector_OBJECTS) $(test_MetSelector_LDADD) $(LIBS)

test_NetcdfIn$(EXEEXT): $(test_NetcdfIn_OBJECTS) $(test_NetcdfIn_DEPENDENCIES) $(EXTRA_test_NetcdfIn_DEPENDENCIES) 
	@rm -f test_NetcdfIn$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_NetcdfIn_OBJECTS) $(test_NetcdfIn_LDADD) $(LIBS)

test_PAltDotOTF$(EXEEXT): $(test_PAltDotOTF_OBJECTS) $(test_PAltDotOTF_DEPENDENCIES) $(EXTRA_test_PAltDotOTF_DEPENDENCIES) 
	@rm -f test_PAltDotOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PAltDotOTF_OBJECTS) $(test_PAltDotOTF_LDADD) $(LIBS)

test_PAltOTF$(EXEEXT): $(test_PAltOTF_OBJECTS) $(test_PAltOTF_DEPENDENCIES) $(EXTRA_test_PAltOTF_DEPENDENCIES) 
	@rm -f test_PAltOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PAltOTF_OBJECTS) $(test_PAltOTF_LDADD) $(LIBS)

test_PGenDisc$(EXEEXT): $(test_PGenDisc_OBJECTS) $(test_PGenDisc_DEPENDENCIES) $(EXTRA_test_PGenDisc_DEPENDENCIES) 
	@rm -f test_PGenDisc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenDisc_OBJECTS) $(test_PGenDisc_LDADD) $(LIBS)

test_PGenFile$(EXEEXT): $(test_PGenFile_OBJECTS) $(test_PGenFile_DEPENDENCIES) $(EXTRA_test_PGenFile_DEPENDENCIES) 
	@rm -f test_PGenFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenFile_OBJECTS) $(test_PGenFile_LDADD) $(LIBS)

test_PGenGrid$(EXEEXT): $(test_PGenGrid_OBJECTS) $(test_PGenGrid_DEPENDENCIES) $(EXTRA_test_PGenGrid_DEPENDENCIES) 
	@rm -f test_PGenGrid$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenGrid_OBJECTS) $(test_PGenGrid_LDADD) $(LIBS)

test_PGenNetcdf$(EXEEXT): $(test_PGenNetcdf_OBJECTS) $(test_PGenNetcdf_DEPENDENCIES) $(EXTRA_test_PGenNetcdf_DEPENDENCIES) 
	@rm -f test_PGenNetcdf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenNetcdf_OBJECTS) $(test_PGenNetcdf_LDADD) $(LIBS)

test_PGenRep$(EXEEXT): $(test_PGenRep_OBJECTS) $(test_PGenRep_DEPENDENCIES) $(EXTRA_test_PGenRep_DEPENDENCIES) 
	@rm -f test_PGenRep$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenRep_OBJECTS) $(test_PGenRep_LDADD) $(LIBS)

test_PGenRnd$(EXEEXT): $(test_PGenRnd_OBJECTS) $(test_PGenRnd_DEPENDENCIES) $(EXTRA_test_PGenRnd_DEPENDENCIES) 
	@rm -f test_PGenRnd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenRnd_OBJECTS) $(test_PGenRnd_LDADD) $(LIBS)

test_PGenRndDisc$(EXEEXT): $(test_PGenRndDisc_OBJECTS) $(test_PGenRndDisc_DEPENDENCIES) $(EXTRA_test_PGenRndDisc_DEPENDENCIES) 
	@rm -f test_PGenRndDisc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PGenRndDisc_OBJECTS) $(test_PGenRndDisc_LDADD) $(LIBS)

test_Parcel$(EXEEXT): $(test_Parcel_OBJECTS) $(test_Parcel_DEPENDENCIES) $(EXTRA_test_Parcel_DEPENDENCIES) 
	@rm -f test_Parcel$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Parcel_OBJECTS) $(test_Parcel_LDADD) $(LIBS)

test_PressOTF$(EXEEXT): $(test_PressOTF_OBJECTS) $(test_PressOTF_DEPENDENCIES) $(EXTRA_test_PressOTF_DEPENDENCIES) 
	@rm -f test_PressOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_PressOTF_OBJECTS) $(test_PressOTF_LDADD) $(LIBS)

test_RandomSrc$(EXEEXT): $(test_RandomSrc_OBJECTS) $(test_RandomSrc_DEPENDENCIES) $(EXTRA_test_RandomSrc_DEPENDENCIES) 
	@rm -f test_RandomSrc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_RandomSrc_OBJECTS) $(test_RandomSrc_LDADD) $(LIBS)

test_SerialGrp$(EXEEXT): $(test_SerialGrp_OBJECTS) $(test_SerialGrp_DEPENDENCIES) $(EXTRA_test_SerialGrp_DEPENDENCIES) 
	@rm -f test_SerialGrp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_SerialGrp_OBJECTS) $(test_SerialGrp_LDADD) $(LIBS)

test_StreamDump_Load$(EXEEXT): $(test_StreamDump_Load_OBJECTS) $(test_StreamDump_Load_DEPENDENCIES) $(EXTRA_test_StreamDump_Load_DEPENDENCIES) 
	@rm -f test_StreamDump_Load$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StreamDump_Load_OBJECTS) $(test_StreamDump_Load_LDADD) $(LIBS)

test_StreamPrint$(EXEEXT): $(test_StreamPrint_OBJECTS) $(test_StreamPrint_DEPENDENCIES) $(EXTRA_test_StreamPrint_DEPENDENCIES) 
	@rm -f test_StreamPrint$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StreamPrint_OBJECTS) $(test_StreamPrint_LDADD) $(LIBS)

test_StreamPrintMPI$(EXEEXT): $(test_StreamPrintMPI_OBJECTS) $(test_StreamPrintMPI_DEPENDENCIES) $(EXTRA_test_StreamPrintMPI_DEPENDENCIES) 
	@rm -f test_StreamPrintMPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StreamPrintMPI_OBJECTS) $(test_StreamPrintMPI_LDADD) $(LIBS)

test_StreamRead$(EXEEXT): $(test_StreamRead_OBJECTS) $(test_StreamRead_DEPENDENCIES) $(EXTRA_test_StreamRead_DEPENDENCIES) 
	@rm -f test_StreamRead$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StreamRead_OBJECTS) $(test_StreamRead_LDADD) $(LIBS)

test_StreamReadMPI$(EXEEXT): $(test_StreamReadMPI_OBJECTS) $(test_StreamReadMPI_DEPENDENCIES) $(EXTRA_test_StreamReadMPI_DEPENDENCIES) 
	@rm -f test_StreamReadMPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_StreamReadMPI_OBJECTS) $(test_StreamReadMPI_LDADD) $(LIBS)

test_SwarmMPI$(EXEEXT): $(test_SwarmMPI_OBJECTS) $(test_SwarmMPI_DEPENDENCIES) $(EXTRA_test_SwarmMPI_DEPENDENCIES) 
	@rm -f test_SwarmMPI$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_SwarmMPI_OBJECTS) $(test_SwarmMPI_LDADD) $(LIBS)

test_SwarmSerial$(EXEEXT): $(test_SwarmSerial_OBJECTS) $(test_SwarmSerial_DEPENDENCIES) $(EXTRA_test_SwarmSerial_DEPENDENCIES) 
	@rm -f test_SwarmSerial$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_SwarmSerial_OBJECTS) $(test_SwarmSerial_LDADD) $(LIBS)

test_ThetaDotOTF$(EXEEXT): $(test_ThetaDotOTF_OBJECTS) $(test_ThetaDotOTF_DEPENDENCIES) $(EXTRA_test_ThetaDotOTF_DEPENDENCIES) 
	@rm -f test_ThetaDotOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ThetaDotOTF_OBJECTS) $(test_ThetaDotOTF_LDADD) $(LIBS)

test_ThetaOTF$(EXEEXT): $(test_ThetaOTF_OBJECTS) $(test_ThetaOTF_DEPENDENCIES) $(EXTRA_test_ThetaOTF_DEPENDENCIES) 
	@rm -f test_ThetaOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ThetaOTF_OBJECTS) $(test_ThetaOTF_LDADD) $(LIBS)

test_TropOTF$(EXEEXT): $(test_TropOTF_OBJECTS) $(test_TropOTF_DEPENDENCIES) $(EXTRA_test_TropOTF_DEPENDENCIES) 
	@rm -f test_TropOTF$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_TropOTF_OBJECTS) $(test_TropOTF_LDADD) $(LIBS)

test_traj000$(EXEEXT): $(test_traj000_OBJECTS) $(test_traj000_DEPENDENCIES) $(EXTRA_test_traj000_DEPENDENCIES) 
	@rm -f test_traj000$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_traj000_OBJECTS) $(test_traj000_LDADD) $(LIBS)

test_traj001$(EXEEXT): $(test_traj001_OBJECTS) $(test_traj001_DEPENDENCIES) $(EXTRA_test_traj001_DEPENDENCIES) 
	@rm -f test_traj001$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_traj001_OBJECTS) $(test_traj001_LDADD) $(LIBS)

test_traj010$(EXEEXT): $(test_traj010_OBJECTS) $(test_traj010_DEPENDENCIES) $(EXTRA_test_traj010_DEPENDENCIES) 
	@rm -f test_traj010$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_traj010_OBJECTS) $(test_traj010_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_BalanceThetaDot1OTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_BilinearHinterp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_BilinearHinterp_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_CalGregorian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ChangeVertical.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Configuration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_DensOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Earth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FileLock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FileLock_MPI-test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FileLock_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FilePath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FlockMPI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_FlockSerial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonField3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonField3D_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonFieldSfc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_GridLatLonFieldSfc_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_LinearVinterp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_LogLinearVinterp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MPIGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGEOSfp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGEOSfpAssim.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGEOSfpFcast.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGridSBRot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetGridSBRot_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetMERRA.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetMERRA2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetSBRot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetSBRot_MPI-test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetSBRot_PGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_MetSelector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_NetcdfIn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PAltDotOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PAltOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenDisc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenFile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenGrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenNetcdf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenRep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenRnd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PGenRndDisc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_Parcel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_PressOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_RandomSrc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_SerialGrp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StreamDump_Load.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StreamPrint.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StreamPrintMPI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StreamRead.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StreamReadMPI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_SwarmMPI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_SwarmSerial.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ThetaDotOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ThetaOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_TropOTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_traj000.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_traj001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_traj010.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_utils.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.o: test_BilinearHinterp_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.o -MD -MP -MF $(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Tpo -c -o test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.o `test -f 'test_BilinearHinterp_PGrp.cc' || echo '$(srcdir)/'`test_BilinearHinterp_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Tpo $(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_BilinearHinterp_PGrp.cc' object='test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.o `test -f 'test_BilinearHinterp_PGrp.cc' || echo '$(srcdir)/'`test_BilinearHinterp_PGrp.cc

test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.obj: test_BilinearHinterp_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.obj -MD -MP -MF $(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Tpo -c -o test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.obj `if test -f 'test_BilinearHinterp_PGrp.cc'; then $(CYGPATH_W) 'test_BilinearHinterp_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_BilinearHinterp_PGrp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Tpo $(DEPDIR)/test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_BilinearHinterp_PGrp.cc' object='test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_BilinearHinterp_MPI-test_BilinearHinterp_PGrp.obj `if test -f 'test_BilinearHinterp_PGrp.cc'; then $(CYGPATH_W) 'test_BilinearHinterp_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_BilinearHinterp_PGrp.cc'; fi`

test_BilinearHinterp_MPI-test_utils.o: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_BilinearHinterp_MPI-test_utils.o -MD -MP -MF $(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Tpo -c -o test_BilinearHinterp_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Tpo $(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_BilinearHinterp_MPI-test_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_BilinearHinterp_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc

test_BilinearHinterp_MPI-test_utils.obj: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_BilinearHinterp_MPI-test_utils.obj -MD -MP -MF $(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Tpo -c -o test_BilinearHinterp_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Tpo $(DEPDIR)/test_BilinearHinterp_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_BilinearHinterp_MPI-test_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_BilinearHinterp_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_BilinearHinterp_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`

test_FileLock_MPI-test_FileLock_PGrp.o: test_FileLock_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_FileLock_MPI-test_FileLock_PGrp.o -MD -MP -MF $(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Tpo -c -o test_FileLock_MPI-test_FileLock_PGrp.o `test -f 'test_FileLock_PGrp.cc' || echo '$(srcdir)/'`test_FileLock_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Tpo $(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_FileLock_PGrp.cc' object='test_FileLock_MPI-test_FileLock_PGrp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_FileLock_MPI-test_FileLock_PGrp.o `test -f 'test_FileLock_PGrp.cc' || echo '$(srcdir)/'`test_FileLock_PGrp.cc

test_FileLock_MPI-test_FileLock_PGrp.obj: test_FileLock_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_FileLock_MPI-test_FileLock_PGrp.obj -MD -MP -MF $(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Tpo -c -o test_FileLock_MPI-test_FileLock_PGrp.obj `if test -f 'test_FileLock_PGrp.cc'; then $(CYGPATH_W) 'test_FileLock_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_FileLock_PGrp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Tpo $(DEPDIR)/test_FileLock_MPI-test_FileLock_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_FileLock_PGrp.cc' object='test_FileLock_MPI-test_FileLock_PGrp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_FileLock_MPI-test_FileLock_PGrp.obj `if test -f 'test_FileLock_PGrp.cc'; then $(CYGPATH_W) 'test_FileLock_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_FileLock_PGrp.cc'; fi`

test_FileLock_MPI-test_utils.o: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_FileLock_MPI-test_utils.o -MD -MP -MF $(DEPDIR)/test_FileLock_MPI-test_utils.Tpo -c -o test_FileLock_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_FileLock_MPI-test_utils.Tpo $(DEPDIR)/test_FileLock_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_FileLock_MPI-test_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_FileLock_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc

test_FileLock_MPI-test_utils.obj: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_FileLock_MPI-test_utils.obj -MD -MP -MF $(DEPDIR)/test_FileLock_MPI-test_utils.Tpo -c -o test_FileLock_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_FileLock_MPI-test_utils.Tpo $(DEPDIR)/test_FileLock_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_FileLock_MPI-test_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_FileLock_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_FileLock_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`

test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.o: test_GridLatLonField3D_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.o -MD -MP -MF $(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Tpo -c -o test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.o `test -f 'test_GridLatLonField3D_PGrp.cc' || echo '$(srcdir)/'`test_GridLatLonField3D_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Tpo $(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GridLatLonField3D_PGrp.cc' object='test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.o `test -f 'test_GridLatLonField3D_PGrp.cc' || echo '$(srcdir)/'`test_GridLatLonField3D_PGrp.cc

test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.obj: test_GridLatLonField3D_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.obj -MD -MP -MF $(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Tpo -c -o test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.obj `if test -f 'test_GridLatLonField3D_PGrp.cc'; then $(CYGPATH_W) 'test_GridLatLonField3D_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_GridLatLonField3D_PGrp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Tpo $(DEPDIR)/test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GridLatLonField3D_PGrp.cc' object='test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonField3D_MPI-test_GridLatLonField3D_PGrp.obj `if test -f 'test_GridLatLonField3D_PGrp.cc'; then $(CYGPATH_W) 'test_GridLatLonField3D_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_GridLatLonField3D_PGrp.cc'; fi`

test_GridLatLonField3D_MPI-test_utils.o: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonField3D_MPI-test_utils.o -MD -MP -MF $(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Tpo -c -o test_GridLatLonField3D_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Tpo $(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_GridLatLonField3D_MPI-test_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonField3D_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc

test_GridLatLonField3D_MPI-test_utils.obj: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonField3D_MPI-test_utils.obj -MD -MP -MF $(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Tpo -c -o test_GridLatLonField3D_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Tpo $(DEPDIR)/test_GridLatLonField3D_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_GridLatLonField3D_MPI-test_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonField3D_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonField3D_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`

test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.o: test_GridLatLonFieldSfc_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.o -MD -MP -MF $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Tpo -c -o test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.o `test -f 'test_GridLatLonFieldSfc_PGrp.cc' || echo '$(srcdir)/'`test_GridLatLonFieldSfc_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Tpo $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GridLatLonFieldSfc_PGrp.cc' object='test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.o `test -f 'test_GridLatLonFieldSfc_PGrp.cc' || echo '$(srcdir)/'`test_GridLatLonFieldSfc_PGrp.cc

test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.obj: test_GridLatLonFieldSfc_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.obj -MD -MP -MF $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Tpo -c -o test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.obj `if test -f 'test_GridLatLonFieldSfc_PGrp.cc'; then $(CYGPATH_W) 'test_GridLatLonFieldSfc_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_GridLatLonFieldSfc_PGrp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Tpo $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_GridLatLonFieldSfc_PGrp.cc' object='test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonFieldSfc_MPI-test_GridLatLonFieldSfc_PGrp.obj `if test -f 'test_GridLatLonFieldSfc_PGrp.cc'; then $(CYGPATH_W) 'test_GridLatLonFieldSfc_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_GridLatLonFieldSfc_PGrp.cc'; fi`

test_GridLatLonFieldSfc_MPI-test_utils.o: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonFieldSfc_MPI-test_utils.o -MD -MP -MF $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Tpo -c -o test_GridLatLonFieldSfc_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Tpo $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_GridLatLonFieldSfc_MPI-test_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonFieldSfc_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc

test_GridLatLonFieldSfc_MPI-test_utils.obj: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_GridLatLonFieldSfc_MPI-test_utils.obj -MD -MP -MF $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Tpo -c -o test_GridLatLonFieldSfc_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Tpo $(DEPDIR)/test_GridLatLonFieldSfc_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_GridLatLonFieldSfc_MPI-test_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_GridLatLonFieldSfc_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_GridLatLonFieldSfc_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`

test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.o: test_MetGridSBRot_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.o -MD -MP -MF $(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Tpo -c -o test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.o `test -f 'test_MetGridSBRot_PGrp.cc' || echo '$(srcdir)/'`test_MetGridSBRot_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Tpo $(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_MetGridSBRot_PGrp.cc' object='test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.o `test -f 'test_MetGridSBRot_PGrp.cc' || echo '$(srcdir)/'`test_MetGridSBRot_PGrp.cc

test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.obj: test_MetGridSBRot_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.obj -MD -MP -MF $(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Tpo -c -o test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.obj `if test -f 'test_MetGridSBRot_PGrp.cc'; then $(CYGPATH_W) 'test_MetGridSBRot_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_MetGridSBRot_PGrp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Tpo $(DEPDIR)/test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_MetGridSBRot_PGrp.cc' object='test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetGridSBRot_MPI-test_MetGridSBRot_PGrp.obj `if test -f 'test_MetGridSBRot_PGrp.cc'; then $(CYGPATH_W) 'test_MetGridSBRot_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_MetGridSBRot_PGrp.cc'; fi`

test_MetGridSBRot_MPI-test_utils.o: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetGridSBRot_MPI-test_utils.o -MD -MP -MF $(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Tpo -c -o test_MetGridSBRot_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Tpo $(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_MetGridSBRot_MPI-test_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetGridSBRot_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc

test_MetGridSBRot_MPI-test_utils.obj: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetGridSBRot_MPI-test_utils.obj -MD -MP -MF $(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Tpo -c -o test_MetGridSBRot_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Tpo $(DEPDIR)/test_MetGridSBRot_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_MetGridSBRot_MPI-test_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetGridSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetGridSBRot_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`

test_MetSBRot_MPI-test_MetSBRot_PGrp.o: test_MetSBRot_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetSBRot_MPI-test_MetSBRot_PGrp.o -MD -MP -MF $(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Tpo -c -o test_MetSBRot_MPI-test_MetSBRot_PGrp.o `test -f 'test_MetSBRot_PGrp.cc' || echo '$(srcdir)/'`test_MetSBRot_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Tpo $(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_MetSBRot_PGrp.cc' object='test_MetSBRot_MPI-test_MetSBRot_PGrp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetSBRot_MPI-test_MetSBRot_PGrp.o `test -f 'test_MetSBRot_PGrp.cc' || echo '$(srcdir)/'`test_MetSBRot_PGrp.cc

test_MetSBRot_MPI-test_MetSBRot_PGrp.obj: test_MetSBRot_PGrp.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetSBRot_MPI-test_MetSBRot_PGrp.obj -MD -MP -MF $(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Tpo -c -o test_MetSBRot_MPI-test_MetSBRot_PGrp.obj `if test -f 'test_MetSBRot_PGrp.cc'; then $(CYGPATH_W) 'test_MetSBRot_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_MetSBRot_PGrp.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Tpo $(DEPDIR)/test_MetSBRot_MPI-test_MetSBRot_PGrp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_MetSBRot_PGrp.cc' object='test_MetSBRot_MPI-test_MetSBRot_PGrp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetSBRot_MPI-test_MetSBRot_PGrp.obj `if test -f 'test_MetSBRot_PGrp.cc'; then $(CYGPATH_W) 'test_MetSBRot_PGrp.cc'; else $(CYGPATH_W) '$(srcdir)/test_MetSBRot_PGrp.cc'; fi`

test_MetSBRot_MPI-test_utils.o: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetSBRot_MPI-test_utils.o -MD -MP -MF $(DEPDIR)/test_MetSBRot_MPI-test_utils.Tpo -c -o test_MetSBRot_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetSBRot_MPI-test_utils.Tpo $(DEPDIR)/test_MetSBRot_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_MetSBRot_MPI-test_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetSBRot_MPI-test_utils.o `test -f 'test_utils.cc' || echo '$(srcdir)/'`test_utils.cc

test_MetSBRot_MPI-test_utils.obj: test_utils.cc
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MetSBRot_MPI-test_utils.obj -MD -MP -MF $(DEPDIR)/test_MetSBRot_MPI-test_utils.Tpo -c -o test_MetSBRot_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/test_MetSBRot_MPI-test_utils.Tpo $(DEPDIR)/test_MetSBRot_MPI-test_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='test_utils.cc' object='test_MetSBRot_MPI-test_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_MetSBRot_MPI_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MetSBRot_MPI-test_utils.obj `if test -f 'test_utils.cc'; then $(CYGPATH_W) 'test_utils.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils.cc'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_RandomSrc.log: test_RandomSrc$(EXEEXT)
	@p='test_RandomSrc$(EXEEXT)'; \
	b='test_RandomSrc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Configuration.sh.log: test_Configuration.sh
	@p='test_Configuration.sh'; \
	b='test_Configuration.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_FilePath.log: test_FilePath$(EXEEXT)
	@p='test_FilePath$(EXEEXT)'; \
	b='test_FilePath'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_FileLock.log: test_FileLock$(EXEEXT)
	@p='test_FileLock$(EXEEXT)'; \
	b='test_FileLock'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_CalGregorian.log: test_CalGregorian$(EXEEXT)
	@p='test_CalGregorian$(EXEEXT)'; \
	b='test_CalGregorian'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Earth.log: test_Earth$(EXEEXT)
	@p='test_Earth$(EXEEXT)'; \
	b='test_Earth'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_SerialGrp.log: test_SerialGrp$(EXEEXT)
	@p='test_SerialGrp$(EXEEXT)'; \
	b='test_SerialGrp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_FileLock_Serial.log: test_FileLock_Serial$(EXEEXT)
	@p='test_FileLock_Serial$(EXEEXT)'; \
	b='test_FileLock_Serial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MPIGrp.sh.log: test_MPIGrp.sh
	@p='test_MPIGrp.sh'; \
	b='test_MPIGrp.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_FileLock_MPI.sh.log: test_FileLock_MPI.sh
	@p='test_FileLock_MPI.sh'; \
	b='test_FileLock_MPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_GridLatLonFieldSfc.log: test_GridLatLonFieldSfc$(EXEEXT)
	@p='test_GridLatLonFieldSfc$(EXEEXT)'; \
	b='test_GridLatLonFieldSfc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_GridLatLonField3D.log: test_GridLatLonField3D$(EXEEXT)
	@p='test_GridLatLonField3D$(EXEEXT)'; \
	b='test_GridLatLonField3D'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_GridLatLonFieldSfc_serial.log: test_GridLatLonFieldSfc_serial$(EXEEXT)
	@p='test_GridLatLonFieldSfc_serial$(EXEEXT)'; \
	b='test_GridLatLonFieldSfc_serial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_GridLatLonField3D_serial.log: test_GridLatLonField3D_serial$(EXEEXT)
	@p='test_GridLatLonField3D_serial$(EXEEXT)'; \
	b='test_GridLatLonField3D_serial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_GridLatLonFieldSfc_MPI.sh.log: test_GridLatLonFieldSfc_MPI.sh
	@p='test_GridLatLonFieldSfc_MPI.sh'; \
	b='test_GridLatLonFieldSfc_MPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_GridLatLonField3D_MPI.sh.log: test_GridLatLonField3D_MPI.sh
	@p='test_GridLatLonField3D_MPI.sh'; \
	b='test_GridLatLonField3D_MPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_LinearVinterp.log: test_LinearVinterp$(EXEEXT)
	@p='test_LinearVinterp$(EXEEXT)'; \
	b='test_LinearVinterp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_LogLinearVinterp.log: test_LogLinearVinterp$(EXEEXT)
	@p='test_LogLinearVinterp$(EXEEXT)'; \
	b='test_LogLinearVinterp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_BilinearHinterp.log: test_BilinearHinterp$(EXEEXT)
	@p='test_BilinearHinterp$(EXEEXT)'; \
	b='test_BilinearHinterp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_BilinearHinterp_serial.log: test_BilinearHinterp_serial$(EXEEXT)
	@p='test_BilinearHinterp_serial$(EXEEXT)'; \
	b='test_BilinearHinterp_serial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_BilinearHinterp_MPI.sh.log: test_BilinearHinterp_MPI.sh
	@p='test_BilinearHinterp_MPI.sh'; \
	b='test_BilinearHinterp_MPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ThetaOTF.log: test_ThetaOTF$(EXEEXT)
	@p='test_ThetaOTF$(EXEEXT)'; \
	b='test_ThetaOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_TropOTF.log: test_TropOTF$(EXEEXT)
	@p='test_TropOTF$(EXEEXT)'; \
	b='test_TropOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PressOTF.log: test_PressOTF$(EXEEXT)
	@p='test_PressOTF$(EXEEXT)'; \
	b='test_PressOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PAltOTF.log: test_PAltOTF$(EXEEXT)
	@p='test_PAltOTF$(EXEEXT)'; \
	b='test_PAltOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PAltDotOTF.log: test_PAltDotOTF$(EXEEXT)
	@p='test_PAltDotOTF$(EXEEXT)'; \
	b='test_PAltDotOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_DensOTF.log: test_DensOTF$(EXEEXT)
	@p='test_DensOTF$(EXEEXT)'; \
	b='test_DensOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ThetaDotOTF.log: test_ThetaDotOTF$(EXEEXT)
	@p='test_ThetaDotOTF$(EXEEXT)'; \
	b='test_ThetaDotOTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_BalanceThetaDot1OTF.log: test_BalanceThetaDot1OTF$(EXEEXT)
	@p='test_BalanceThetaDot1OTF$(EXEEXT)'; \
	b='test_BalanceThetaDot1OTF'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetSBRot.log: test_MetSBRot$(EXEEXT)
	@p='test_MetSBRot$(EXEEXT)'; \
	b='test_MetSBRot'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetSBRot_serial.log: test_MetSBRot_serial$(EXEEXT)
	@p='test_MetSBRot_serial$(EXEEXT)'; \
	b='test_MetSBRot_serial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetSBRot_MPI.sh.log: test_MetSBRot_MPI.sh
	@p='test_MetSBRot_MPI.sh'; \
	b='test_MetSBRot_MPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetGridSBRot.log: test_MetGridSBRot$(EXEEXT)
	@p='test_MetGridSBRot$(EXEEXT)'; \
	b='test_MetGridSBRot'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetGridSBRot_serial.log: test_MetGridSBRot_serial$(EXEEXT)
	@p='test_MetGridSBRot_serial$(EXEEXT)'; \
	b='test_MetGridSBRot_serial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetGridSBRot_MPI.sh.log: test_MetGridSBRot_MPI.sh
	@p='test_MetGridSBRot_MPI.sh'; \
	b='test_MetGridSBRot_MPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetMERRA.log: test_MetMERRA$(EXEEXT)
	@p='test_MetMERRA$(EXEEXT)'; \
	b='test_MetMERRA'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetMERRA2.log: test_MetMERRA2$(EXEEXT)
	@p='test_MetMERRA2$(EXEEXT)'; \
	b='test_MetMERRA2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetGEOSfpFcast.log: test_MetGEOSfpFcast$(EXEEXT)
	@p='test_MetGEOSfpFcast$(EXEEXT)'; \
	b='test_MetGEOSfpFcast'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetGEOSfpAssim.log: test_MetGEOSfpAssim$(EXEEXT)
	@p='test_MetGEOSfpAssim$(EXEEXT)'; \
	b='test_MetGEOSfpAssim'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetGEOSfp.log: test_MetGEOSfp$(EXEEXT)
	@p='test_MetGEOSfp$(EXEEXT)'; \
	b='test_MetGEOSfp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_MetSelector.log: test_MetSelector$(EXEEXT)
	@p='test_MetSelector$(EXEEXT)'; \
	b='test_MetSelector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_Parcel.log: test_Parcel$(EXEEXT)
	@p='test_Parcel$(EXEEXT)'; \
	b='test_Parcel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StreamDump_Load.log: test_StreamDump_Load$(EXEEXT)
	@p='test_StreamDump_Load$(EXEEXT)'; \
	b='test_StreamDump_Load'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StreamRead.log: test_StreamRead$(EXEEXT)
	@p='test_StreamRead$(EXEEXT)'; \
	b='test_StreamRead'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StreamPrint.log: test_StreamPrint$(EXEEXT)
	@p='test_StreamPrint$(EXEEXT)'; \
	b='test_StreamPrint'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_FlockSerial.log: test_FlockSerial$(EXEEXT)
	@p='test_FlockSerial$(EXEEXT)'; \
	b='test_FlockSerial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_SwarmSerial.log: test_SwarmSerial$(EXEEXT)
	@p='test_SwarmSerial$(EXEEXT)'; \
	b='test_SwarmSerial'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_ChangeVertical.log: test_ChangeVertical$(EXEEXT)
	@p='test_ChangeVertical$(EXEEXT)'; \
	b='test_ChangeVertical'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_NetcdfIn.log: test_NetcdfIn$(EXEEXT)
	@p='test_NetcdfIn$(EXEEXT)'; \
	b='test_NetcdfIn'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_FlockMPI.sh.log: test_FlockMPI.sh
	@p='test_FlockMPI.sh'; \
	b='test_FlockMPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_SwarmMPI.sh.log: test_SwarmMPI.sh
	@p='test_SwarmMPI.sh'; \
	b='test_SwarmMPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StreamPrintMPI.sh.log: test_StreamPrintMPI.sh
	@p='test_StreamPrintMPI.sh'; \
	b='test_StreamPrintMPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StreamReadMPI.sh.log: test_StreamReadMPI.sh
	@p='test_StreamReadMPI.sh'; \
	b='test_StreamReadMPI.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenRep.log: test_PGenRep$(EXEEXT)
	@p='test_PGenRep$(EXEEXT)'; \
	b='test_PGenRep'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenGrid.log: test_PGenGrid$(EXEEXT)
	@p='test_PGenGrid$(EXEEXT)'; \
	b='test_PGenGrid'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenRnd.log: test_PGenRnd$(EXEEXT)
	@p='test_PGenRnd$(EXEEXT)'; \
	b='test_PGenRnd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenRndDisc.log: test_PGenRndDisc$(EXEEXT)
	@p='test_PGenRndDisc$(EXEEXT)'; \
	b='test_PGenRndDisc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenDisc.log: test_PGenDisc$(EXEEXT)
	@p='test_PGenDisc$(EXEEXT)'; \
	b='test_PGenDisc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenFile.log: test_PGenFile$(EXEEXT)
	@p='test_PGenFile$(EXEEXT)'; \
	b='test_PGenFile'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_PGenNetcdf.log: test_PGenNetcdf$(EXEEXT)
	@p='test_PGenNetcdf$(EXEEXT)'; \
	b='test_PGenNetcdf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_traj000.log: test_traj000$(EXEEXT)
	@p='test_traj000$(EXEEXT)'; \
	b='test_traj000'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_traj001.log: test_traj001$(EXEEXT)
	@p='test_traj001$(EXEEXT)'; \
	b='test_traj001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_traj010.log: test_traj010$(EXEEXT)
	@p='test_traj010$(EXEEXT)'; \
	b='test_traj010'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_gtmodel_s01.sh.log: test_gtmodel_s01.sh
	@p='test_gtmodel_s01.sh'; \
	b='test_gtmodel_s01.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

@NETCDF_TRUE@   # EXTRA_DIST += test_netcdfIn_data_01.nc4

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
